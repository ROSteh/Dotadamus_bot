package com.predictor.telegram.controller;

import com.predictor.telegram.SayPredictionBot;
import com.predictor.telegram.config.BotConfig;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.telegram.telegrambots.meta.api.methods.ParseMode;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.MessageEntity;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.List;

@Slf4j
@RestController
@RequestMapping("/api")
@AllArgsConstructor
public class BotMessageController {
    private final SayPredictionBot bot;
    private final BotConfig botConfig;

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–º
     *
     * @param message –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @return –û–ö - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
     */
    @PostMapping(value = "/message")
    public ResponseEntity<?> sendMessage(@RequestParam String message) {
        SendMessage botMessage = SendMessage
                .builder()
                .chatId(botConfig.getChatId())
                .text(message)
                .parseMode(ParseMode.HTML)
                .build();

        try {
            bot.execute(botMessage);
        } catch (TelegramApiException e) {
            log.error(String.valueOf(e));
            return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
        }
        return new ResponseEntity<>(HttpStatus.OK);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–º
     *
     * @return –û–ö - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
     */
    @PostMapping(value = "/msg")
    public ResponseEntity<?> sendMessage2() {

        String msgString = """
                Wolf Team (radiant) üÜö Ravens (dire)
                –ö–∞—Ä—Ç–∞: 1
                –í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Radiant: Hoodwink, Dragon Knight, Phoenix, Lifestealer, Timbersaw
                –í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Dire: Tiny, Abaddon, Sand King, Keeper of the Light, Ember Spirit

                –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ radiant –ø–æ –≥–µ—Ä–æ—è–º: 62%

                DPC WEU Division II Tour 2 - 2021/2022 -by 4D Esports

                –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å:
                18:07 - Wolf Team 74% üéØ

                –ú–∏–Ω. –∫–æ—ç—Ñ. –ø–æ –º–∞—Ç. –æ–∂–∏–¥–∞–Ω–∏—é - 1.35

                –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É: 6520430616
                                """;

        SendMessage botMessage = SendMessage
                .builder()
                .chatId(botConfig.getChatId())
                .text(msgString)
                .disableWebPagePreview(true)
                .entities(List.of(MessageEntity.builder()
                                .type("bold").offset(37).length(7).text("–ö–∞—Ä—Ç–∞:")
                                .build(),
                        MessageEntity.builder()
                                .type("bold").offset(46).length(23).text("–í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Radiant")
                                .build(),
                        MessageEntity.builder()
                                .type("bold").offset(128).length(20).text("–í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Dire")
                                .build(),
                        MessageEntity.builder()
                                .type("bold").offset(211).length(31).text("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ radiant –ø–æ –≥–µ—Ä–æ—è–º:")
                                .build(),
                        MessageEntity.builder()
                                .type("text_link").offset(248).length(55).text("DPC WEU Division II Tour 2 - 2021/2022 -by 4D Esports").url("https://ru.dotabuff.com/esports/leagues/14072-dpc-sa-division-ii-tour-2-2021-2022-by-4d-esports")
                                .build(),
                        MessageEntity.builder()
                                .type("bold").offset(330).length(12).text("18:07 - Wolf")
                                .build(),
                        MessageEntity.builder()
                                .type("bold").offset(386).length(6).text("1.35\\n\\n")
                                .build(),
                        MessageEntity.builder()
                                .type("text_link").offset(408).length(10).url("https://ru.dotabuff.com/matches/6520430616").text("6520430616")
                                .build()))
                .build();

        try {
            bot.execute(botMessage);
        } catch (TelegramApiException e) {
            log.error(String.valueOf(e));
            return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
        }
        return new ResponseEntity<>(HttpStatus.OK);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–º
     *
     * @return –û–ö - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
     */
    @PostMapping(value = "/msg3")
    public ResponseEntity<?> sendMessage3(@RequestParam String radiantHeroes,
                                          @RequestParam String direHeroes,
                                          @RequestParam String prediction) {
        log.info(String.valueOf(radiantHeroes));
        log.info(String.valueOf(direHeroes));

        String msgString = """
                Radiant üÜö Dire
                –í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Radiant: %s
                –í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Dire: %s

                –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å:
                %s üéØ
                """;

        SendMessage botMessage = SendMessage
                .builder()
                .chatId(botConfig.getChatId())
                .text(String.format(msgString, radiantHeroes, direHeroes, prediction))
                .disableWebPagePreview(true)
                .entities(List.of(MessageEntity.builder()
                                .type("bold").offset(16).length(23).text("–í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Radiant")
                                .build(),
                        MessageEntity.builder()
                                .type("bold").offset(44+direHeroes.length()).length(20).text("–í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Dire")
                                .build()))
                .build();

        try {
            bot.execute(botMessage);
        } catch (TelegramApiException e) {
            log.error(String.valueOf(e));
            return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
        }
        return new ResponseEntity<>(HttpStatus.OK);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–º
     *
     * @param radiantHeroes –≥–µ—Ä–æ–∏ radiant
     * @param radiantTeam –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–º—ã radiant
     * @param direHeroes –≥–µ—Ä–æ–∏ dire
     * @param direTeam –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–º—ã dire
     * @param prediction –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
     * @return –û–ö - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
     */
    @PostMapping(value = "/msg4")
    public ResponseEntity<?> sendMessage4(@RequestParam String radiantHeroes,
                                          @RequestParam String radiantTeam,
                                          @RequestParam String direHeroes,
                                          @RequestParam String direTeam,
                                          @RequestParam String prediction) {
        log.info("–ü—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {} (radiant) –ø—Ä–æ—Ç–∏–≤ {} (dire) –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {} ", radiantTeam, direTeam, prediction);

        String msgString = """
                %s (radiant) üÜö %s (dire)
                –í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Radiant: %s
                –í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Dire: %s

                –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å:
                %s üéØ
                """;

        SendMessage botMessage = SendMessage
                .builder()
                .chatId(botConfig.getChatId())
                .text(String.format(msgString, radiantTeam, direTeam, radiantHeroes, direHeroes, prediction))
                .disableWebPagePreview(true)
                .entities(List.of(MessageEntity.builder()
                                .type("bold").offset(22+radiantTeam.length()+direTeam.length()).length(23).text("–í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Radiant")
                                .build(),
                        MessageEntity.builder()
                                .type("bold").offset(49-9+radiantTeam.length()+direTeam.length()+direHeroes.length()).length(20).text("–í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ Dire")
                                .build()))
                .build();

        try {
            bot.execute(botMessage);
        } catch (TelegramApiException e) {
            log.error(String.valueOf(e));
            return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
        }
        return new ResponseEntity<>(HttpStatus.OK);
    }
}